on: push
jobs:
  pushed_event:
    runs-on: ubuntu-latest
    outputs:
      continue: "true"
    steps:
    - name: diff version installed
      run: diff --version
    - name: diff manual
      run: man diff
    - name: list software
      run: ls /usr/bin
      
    - name: Check out repository
      uses: actions/checkout@v4
    - name: Modify some file
      run: echo update-$(date -u +"%s") >> testing.txt
    - name: Create pull request
      uses: peter-evans/create-pull-request@v7
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "feat(partnerzones): updates"
        committer: GitHub <noreply@github.com>
        author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
        title: "feat(partnerzones): updates"
        body: "> [!IMPORTANT]\n> Identify which `resources/...` files should be updated and push commits to this PR before merging."
        assignees: Integralist
      
      # validate escaping env var so it's LITERALLY sent as `${SOME_ENVVAR}`.
      # This is so the application handling the request will replace that with an env var value.

    - name: Calculate Compute Package Hash
      id: compute-package-hash
      run: echo "compute_package_hash=389f39027191b8d01337e8cf5f5f94e1c2ee1adce47e50842252818ee04a230a39afc92805d8c6b3ef2fff1a9ba872115e4a02da53baba72a97dcef6aab2df03" >> $GITHUB_OUTPUT

    - name: Create Git Tag
      run: |
        shorthash="$(echo ${{ steps.compute-package-hash.outputs.compute_package_hash }} | cut -c 1-16)";
        echo "$shorthash";
        echo "GIT_STAGE_TAG=stg/$(date +'%Y-%m-%d/%H-%M-%SZ')/$(echo ${{ github.triggering_actor }} | tr '[:upper:]' '[:lower:]' | tr -d ' ')/$shorthash" >> "${GITHUB_ENV}"

    - run: env

    - run: echo curl -LsD - "https://www.example.com/data?location=https://\${SOME_ENVVAR}@data.example.com/example.zip"

    - run: |
        echo foo
        # simulate an error
        echo "STEP_STATUS=failed" >> "${GITHUB_ENV}"
    - if: ${{ env.STEP_STATUS == 'failed' }}
      run: echo "step failed ${{ env.STEP_STATUS }}"
    - if: ${{ env.STEP_STATUS != 'failed' }}
      run: echo "step wasn't a failure ${{ env.STEP_STATUS }}"
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
    - uses: ./.github/actions/debug
      with:
        destroy: true
    - uses: ./.github/actions/debug
      with:
        destroy: "true"
    - uses: ./.github/actions/debug
      with:
        destroy: false
    - uses: ./.github/actions/debug
      with:
        destroy: "false"
    - uses: ./.github/actions/debug
    - run: echo "foo=\"$(date +"%s")\""
    - run: go version
    - run: echo "$PATH"
    - run: touch foo.txt && sudo cp foo.txt /usr/local/bin/foo.txt
    - run: ls /usr/local/bin/
    - run: make bin-viceroy
    - run: echo foobar > some_file.txt
    - run: cat some_file.txt
    - uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-wasi # WebAssembly target
    - run: rustup --version
    - run: cargo --version

  job2:
    needs: pushed_event
    outputs:
      workspace_id: ${{ steps.gen-id.outputs.workspace_id }}
    runs-on: ubuntu-latest
    if: ${{ needs.pushed_event.outputs.continue == 'true' }}
    steps:
      - run: echo "job2 was run"
      - id: gen-id
        run: echo "workspace_id=123" >> $GITHUB_OUTPUT

  job3:
    needs: job2
    runs-on: ubuntu-latest
    if: ${{ needs.job2.outputs.workspace_id != '' }}
    steps:
      - run: echo "job3 was run"
      - run: echo ${{ needs.job2.outputs.workspace_id }}
